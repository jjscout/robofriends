{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/Errorboundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","Fragment","map","robot","i","Searchbox","searchfield","searchChange","classname","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErroBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","render","filteredRobots","filter","toLowerCase","includes","length","fetch","then","response","json","users","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC1B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACE,6BAAKL,IACL,4BAAIC,WCeGK,EApBE,SAAC,GACjB,IADmBC,EACpB,EADoBA,OAElB,OACE,cAAC,IAAMC,SAAP,UAEED,EAAOE,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEET,GAAIQ,EAAMR,GACVF,KAAMU,EAAMV,KACZC,MAAOS,EAAMT,OAHRU,SCIFC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEZ,UAAU,oCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCMHK,EAbA,SAACC,GACd,OACE,qBAAKC,MAAO,CACVC,UAAW,SACVC,OAAQ,kBACRC,OAAQ,SAHX,SAMGJ,EAAMK,YCaEC,E,kDApBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,yDAGFG,KAAKX,MAAMK,a,GAjBKQ,aC+CZC,G,wDAxCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEnB,YAAauB,EAAMC,OAAOC,SAf9B,EAkBdC,OAAS,WACP,MAA+B,EAAKZ,MAA7BpB,EAAP,EAAOA,OAAQM,EAAf,EAAeA,YACT2B,EAAiBjC,EAAOkC,QAAO,SAAA/B,GACnC,OAAOA,EAAMV,KAAK0C,cACjBC,SAAS9B,EAAY6B,kBAExB,OAAQnC,EAAOqC,OAGb,sBAAKzC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAc,EAAKqB,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU5B,OAAQiC,WAP1B,0CAvBA,EAAKb,MAAQ,CACXpB,OAAQ,GACRM,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBgC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKjB,SAAS,CAAEzB,OAAQ0C,W,GAbzBC,IAAMjB,YCKTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASpB,OAAO,cAAC,EAAD,IAAQqB,SAASC,eAAe,SAKhDV,M","file":"static/js/main.79db3be5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src={`https://robohash.org/${id}?200x200`} alt='robots'/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) =>\r\n{\r\n  return (\r\n    <React.Fragment>\r\n    { \r\n      robots.map((robot,i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robot.id}\r\n            name={robot.name}\r\n            email={robot.email} \r\n          />\r\n        ) \r\n      })\r\n    }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react'\r\n\r\nconst Searchbox = ({searchfield, searchChange}) => {\r\n  return (\r\n    <div classname='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg lighteset-blue'\r\n        type='search'\r\n        placeholder='search robots' \r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react'\r\n\r\nconst Scroll = (props)  => {\r\n  return (\r\n    <div style={{\r\n      overflowY: 'scroll',\r\n       border: '1px solid black',\r\n       height: '800px'\r\n       }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll","import React, { Component } from 'react'\r\n\r\nclass ErroBoundary extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooooops that's not good</h1>\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErroBoundary","import React from 'react'\r\nimport CardList from '../components/CardList'\r\nimport Searchbox from '../components/Searchbox'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../components/Errorboundary'\r\nimport './App.css'\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({ robots: users }))\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render = () =>{\r\n    const {robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase()\r\n      .includes(searchfield.toLowerCase())\r\n    })\r\n    return !robots.length ? \r\n    <h1>Loading</h1>:\r\n    (\r\n      <div className='tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <Searchbox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobots}/>\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}